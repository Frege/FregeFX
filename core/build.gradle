
project.tasks.compileFrege.dependsOn(project.tasks.compileJava)

ext {
	jfxLibDir = locateJfxLibDir()
}

dependencies {
    compile files("$jfxLibDir/jfxrt.jar") // TODO: find out why this seems to be necessary even on JDK 8
}

boolean runningOnJDK8() {
    System.getProperty('java.version')[0..2].toDouble() == 1.8
}

String locateJfxLibDir() {
    def javaFxHome = System.env['JAVAFX_HOME'] ?: ''
    def javaHome = System.env['JAVA_HOME'] ?: ''
    def jdk8 = System.getProperty('java.version')[0..2].toDouble() == 1.8

    if (! jdk8) {
        throw new GradleScriptException("Please use Java 8.", null)
    }

    def jdkHome = System.properties.'java.home' ?: ''

    def result = "$javaFxHome/rt/lib"
    if (new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from explicit JAVAFX_HOME: $result"
        return result
    }
    result = "$jdkHome/lib/ext/"
    if (jdk8 && new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from current java 8: $result"
        return result
    }
    result = "$javaHome/jre/lib/"
    if (new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from explicit JAVA_HOME: $result"
        return result
    }
    result = "$javaHome/lib/"
    if (new File("$result/jfxrt.jar").exists()) {
        logger.info "using javafx from explicit JAVA_HOME: $result"
        return result
    }
    logger.error "please use a Java Version 8"
    logger.error " or set JAVA_HOME   to a dir that contains the jre/lib/jfxrt.jar"
    logger.error " or set JAVAFX_HOME to a dir that contains the rt/lib/jfxrt.jar"
    throw new GradleScriptException("location of jfxrt.jar could not be determined", null)
}
//
//fregeNativeGen {
////    typesFile = "$projectDir/src/main/resources/types.properties"
//    className = System.properties.nativeClassName //"javafx.scene.control.Button"
//    outputFile = file(System.properties.outputFile) // outputFile
//}